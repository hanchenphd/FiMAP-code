# IBD segment calls using RaPID (version 1.7)
## 3 cM
### run 1
RaPID_v.1.7 -i <VCF_file> -o <output_folder3_1> -g <map_file> -r 10 -s 2 -d 3 -e 1 -w 2
### run 2
RaPID_v.1.7 -i <VCF_file> -o <output_folder3_2> -g <map_file> -r 10 -s 2 -d 3 -e 2 -w 2

## 5 cM
### run 1
RaPID_v.1.7 -i <VCF_file> -o <output_folder5_1> -g <map_file> -r 10 -s 2 -d 5 -e 1 -w 3
### run 2
RaPID_v.1.7 -i <VCF_file> -o <output_folder5_2> -g <map_file> -r 10 -s 2 -d 5 -e 2 -w 3

## 10 cM
### run 1
RaPID_v.1.7 -i <VCF_file> -o <output_folder5_1> -g <map_file> -r 10 -s 2 -d 10 -e 1 -w 3
### run 2
RaPID_v.1.7 -i <VCF_file> -o <output_folder5_2> -g <map_file> -r 10 -s 2 -d 10 -e 2 -w 3

# IBD segment calls using hap-IBD (version 1.0)
## 3 cM
java -jar hap-ibd.jar gt=<VCF_file> map=<map_file> out=<output_file3> min-output=3 nthreads=100
## 5 cM
java -jar hap-ibd.jar gt=<VCF_file> map=<map_file> out=<output_file5> min-output=5 nthreads=100
## 10 cM
java -jar hap-ibd.jar gt=<VCF_file> map=<map_file> out=<output_file5> min-output=10 nthreads=100

# Genetic maps (average genetic maps from deCODE [1], supplementary dataset 3)
https://www.science.org/doi/10.1126/science.aau1043

# Reference
1. Halldorsson BV, Palsson G, Stefansson OA, Jonsson H, Hardarson MT, Eggertsson HP, Gunnarsson B, Oddsson A, Halldorsson GH, Zink F, Gudjonsson SA, Frigge ML, Thorleifsson G, Sigurdsson A, Stacey SN, Sulem P, Masson G, Helgason A, Gudbjartsson DF, Thorsteinsdottir U, Stefansson K. Characterizing mutagenic effects of recombination through a sequence-level genetic map. Science. 2019 Jan 25;363(6425):eaau1043. doi: 10.1126/science.aau1043. Erratum in: Science. 2019 Feb 8;363(6427): PMID: 30679340.

# process IBD segments into global and local IBD matrices
## RaPID
### step 1: calculate global IBD
Rscript -e 'cm <- 3; runs <- 1; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd(ids = ids, infiles = paste0(cm,"cm/",runs,"/", 1:22, "_",cm,".max.gz"), total.length = 3391.3543292972, outfile.prefix = paste0(cm,"cm/",runs,"/all_",cm,".max.global.chr"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = 22)'
Rscript -e 'cm <- 5; runs <- 1; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd(ids = ids, infiles = paste0(cm,"cm/",runs,"/", 1:22, "_",cm,".max.gz"), total.length = 3391.3543292972, outfile.prefix = paste0(cm,"cm/",runs,"/all_",cm,".max.global.chr"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = 22)'
Rscript -e 'cm <- 10; runs <- 1; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd(ids = ids, infiles = paste0(cm,"cm/",runs,"/", 1:22, "_",cm,".max.gz"), total.length = 3391.3543292972, outfile.prefix = paste0(cm,"cm/",runs,"/all_",cm,".max.global.chr"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = 22)'
Rscript -e 'cm <- 3; runs <- 2; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd(ids = ids, infiles = paste0(cm,"cm/",runs,"/", 1:22, "_",cm,".max.gz"), total.length = 3391.3543292972, outfile.prefix = paste0(cm,"cm/",runs,"/all_",cm,".max.global.chr"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = 22)'
Rscript -e 'cm <- 5; runs <- 2; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd(ids = ids, infiles = paste0(cm,"cm/",runs,"/", 1:22, "_",cm,".max.gz"), total.length = 3391.3543292972, outfile.prefix = paste0(cm,"cm/",runs,"/all_",cm,".max.global.chr"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = 22)'
Rscript -e 'cm <- 10; runs <- 2; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd(ids = ids, infiles = paste0(cm,"cm/",runs,"/", 1:22, "_",cm,".max.gz"), total.length = 3391.3543292972, outfile.prefix = paste0(cm,"cm/",runs,"/all_",cm,".max.global.chr"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = 22)'
./scripts/UKB/UKB_RaPID_combine.py 0.022 100 3 1
./scripts/UKB/UKB_RaPID_combine.py 0.022 100 5 1
./scripts/UKB/UKB_RaPID_combine.py 0.022 100 10 1
./scripts/UKB/UKB_RaPID_combine.py 0.022 100 3 2
./scripts/UKB/UKB_RaPID_combine.py 0.022 100 5 2
./scripts/UKB/UKB_RaPID_combine.py 0.022 100 10 2
Rscript -e 'cm <- 3; runs <- 1; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.088.RData"))'
Rscript -e 'cm <- 5; runs <- 1; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.088.RData"))'
Rscript -e 'cm <- 10; runs <- 1; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.088.RData"))'
Rscript -e 'cm <- 3; runs <- 2; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.088.RData"))'
Rscript -e 'cm <- 5; runs <- 2; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.088.RData"))'
Rscript -e 'cm <- 10; runs <- 2; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0(cm,"cm/",runs,"/all_",cm,".max.global.cut0.088.RData"))'

### step 2: calculate local IBD
Rscript -e 'cm <- 3; runs <- 1; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0(cm,"cm/",runs,"/", chr, "_",cm,".max.gz");IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = 1);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0(cm,"cm/",runs,"/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'
Rscript -e 'cm <- 5; runs <- 1; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0(cm,"cm/",runs,"/", chr, "_",cm,".max.gz");IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = 1);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0(cm,"cm/",runs,"/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'
Rscript -e 'cm <- 10; runs <- 1; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0(cm,"cm/",runs,"/", chr, "_",cm,".max.gz");IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = 1);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0(cm,"cm/",runs,"/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'
Rscript -e 'cm <- 3; runs <- 2; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0(cm,"cm/",runs,"/", chr, "_",cm,".max.gz");IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = 1);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0(cm,"cm/",runs,"/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'
Rscript -e 'cm <- 5; runs <- 2; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0(cm,"cm/",runs,"/", chr, "_",cm,".max.gz");IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = 1);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0(cm,"cm/",runs,"/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'
Rscript -e 'cm <- 10; runs <- 2; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0(cm,"cm/",runs,"/", chr, "_",cm,".max.gz");IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = 1);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0(cm,"cm/",runs,"/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'

## hap-IBD
### step 0: filter out extrapolated IBD segment with length > threshold as artifacts
for i in {1..22}; do echo $i; zcat hapIBD/3cm/chr${i}_g.ibd.gz | awk '$12-$11>2.99 {print}' > hapIBD/3cm/chr${i}_filtered.ibd & done
for i in {1..22}; do echo $i; zcat hapIBD/5cm/chr${i}_g.ibd.gz | awk '$12-$11>4.99 {print}' > hapIBD/5cm/chr${i}_filtered.ibd & done
for i in {1..22}; do echo $i; zcat hapIBD/10cm/chr${i}_g.ibd.gz | awk '$12-$11>9.99 {print}' > hapIBD/10cm/chr${i}_filtered.ibd & done

### step 1: calculate global IBD
for chr in {1..22}
do
    echo ${chr}
    ./scripts/UKB/UKB_RaPID_parse_file.sh hapIBD/3cm/chr${chr}_filtered.ibd.gz hapIBD/3cm/${chr}_3.ibd 70 &
    ./scripts/UKB/UKB_RaPID_parse_file.sh hapIBD/5cm/chr${chr}_filtered.ibd.gz hapIBD/5cm/${chr}_5.ibd 70 &
    ./scripts/UKB/UKB_RaPID_parse_file.sh hapIBD/10cm/chr${chr}_filtered.ibd.gz hapIBD/10cm/${chr}_10.ibd 70 &
done
Rscript -e 'cm <- 3; nfiles <- 70; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];for(chr in 22:1) {print(chr);ibd <- process_global_ibd(ids = ids, infiles = paste0("hapIBD/",cm,"cm/",chr,"_",cm,".ibd.part",1:nfiles), total.length = 3391.3543292972, outfile.prefix = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.chr",chr,".part"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = nfiles)}'
Rscript -e 'cm <- 5; nfiles <- 70; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];for(chr in 22:1) {print(chr);ibd <- process_global_ibd(ids = ids, infiles = paste0("hapIBD/",cm,"cm/",chr,"_",cm,".ibd.part",1:nfiles), total.length = 3391.3543292972, outfile.prefix = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.chr",chr,".part"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = nfiles)}'
Rscript -e 'cm <- 10; nfiles <- 70; library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];for(chr in 22:1) {print(chr);ibd <- process_global_ibd(ids = ids, infiles = paste0("hapIBD/",cm,"cm/",chr,"_",cm,".ibd.part",1:nfiles), total.length = 3391.3543292972, outfile.prefix = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.chr",chr,".part"), id1.col = 2, id2.col = 3, start.col=11, end.col=12, ncores = nfiles)}'
for chr in {1..22}
do
    echo ${chr}
    ./scripts/UKB/UKB_hapIBD_combine_chr_slices.py 0 100 3 ${chr} 70 &
    ./scripts/UKB/UKB_hapIBD_combine_chr_slices.py 0 100 5 ${chr} 70 &
    ./scripts/UKB/UKB_hapIBD_combine_chr_slices.py 0 100 10 ${chr} 70 &
done
./scripts/UKB/UKB_hapIBD_combine.py 0.022 100 3
./scripts/UKB/UKB_hapIBD_combine.py 0.022 100 5
./scripts/UKB/UKB_hapIBD_combine.py 0.022 100 10
Rscript -e 'cm <- 3; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.cut0.088.RData"))'
Rscript -e 'cm <- 5; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.cut0.088.RData"))'
Rscript -e 'cm <- 10; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];ibd <- process_global_ibd_combine(ids = ids, infile = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.cut0.022.gz"), cut.off = 0.088);ibd <- makepd_add_diag(ibd, tol = 1e-5);save(ibd, file = paste0("hapIBD/",cm,"cm/all_",cm,".ibd.global.cut0.088.RData"))'

### step 2: calculate local IBD
Rscript -e 'cm <- 3; nfiles <- 70; ncores <- 4; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0("hapIBD/",cm,"cm/",chr,"_",cm,".ibd.part",1:nfiles);IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = ncores);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0("hapIBD/",cm,"cm/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'
Rscript -e 'cm <- 5; nfiles <- 70; ncores <- 4; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0("hapIBD/",cm,"cm/",chr,"_",cm,".ibd.part",1:nfiles);IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = ncores);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0("hapIBD/",cm,"cm/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'
Rscript -e 'cm <- 10; nfiles <- 70; ncores <- 4; library(methods);library(Matrix);library(doMC);library(FiMAP);ids <- read.table("ids_after_filtering")[,1];ids_exclude <- read.table("withdrawal.csv")[,1];ids <- ids[!ids %in% ids_exclude];chr.lengths <- read.table("chr.length.cM.txt")[,2];for(chr in 22:1) {print(chr);infile <- paste0("hapIBD/",cm,"cm/",chr,"_",cm,".ibd.part",1:nfiles);IBD.list <- get_local_ibd(ids = ids, infiles = infile, chr.length = chr.lengths[chr], window.size = 1, id1.col = 2, id2.col = 3, start.col=11, end.col=12, cut.off = 0, ncores = ncores);for(i in seq_along(IBD.list)) {ibd.list <- list(chr = chr, start = IBD.list[[i]]$start, end = IBD.list[[i]]$end, matrix = IBD.list[[i]]$matrix);if(is.null(ibd.list$matrix)) next;save(ibd.list, file = paste0("hapIBD/",cm,"cm/chunk.1cM/chr",chr,".start",ibd.list$start,"cM.RData"))}}'


# GWAS
nohup sh -c 'for i in 48 49 50 20015 21001 21002; do date; echo $i; Rscript --vanilla scripts/UKB/UKB_runGWAS_imputed.R $i 70; done' &
nohup sh -c 'for i in 48 49 50 20015 21001 21002; do echo $i; for chr in {1..22}; do date; echo $chr; Rscript --vanilla scripts/UKB/UKB_runGWAS_imputed_filter_addcM.R $i $chr 0.3 & done; done' &
nohup sh -c 'for i in 48 49 50 20015 21001 21002; do date; echo $i; Rscript --vanilla scripts/UKB/UKB_runGWAS_imputed_clump.R $i 0.0001 100 1e-6; done' &

# FiMAP
nohup sh -c 'for i in 48 49 50 20015 21001 21002; do echo $i; for cm in 3; do date; Rscript --vanilla scripts/UKB/UKB_FiMAP.R $i 12345 $cm 1 40; done; done' &
nohup sh -c 'for i in 48 49 50 20015 21001 21002; do echo $i; for cm in 3; do date; Rscript --vanilla scripts/UKB/UKB_FiMAP.R $i 12345 $cm 2 40; done; done' &
nohup sh -c 'for i in 48 49 50 20015 21001 21002; do echo $i; for cm in 3; do date; Rscript --vanilla scripts/UKB/UKB_FiMAP.R $i 54321 $cm 1 40; done; done' &

# FiMAP conditional on GWAS
nohup sh -c 'for i in 48 49 20015 21001 21002 50; do echo $i; date; Rscript --vanilla scripts/UKB/UKB_FiMAP_conditional_GWAS.R $i 40; done' &
